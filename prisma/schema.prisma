generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Event {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  location    String?
  imageUrl    String?
  latitude    Float?
  longitude   Float?
  link        String?
  price       Float?
  slug        String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  platform    String?
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationTokens")
}

model Bookmark {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  eventId      String
  createdAt    DateTime @default(now())
  eventDetails Json?
  @@unique([userId, eventId])
}
